@model BugTracker.Models.Ticket

@{
    ViewBag.Title = "Edit";
}
<style>
    html, body {
        height: 100%;
        font-family: 'Roboto', sans-serif;
        font-weight: 400;
        background: #ccc;
        background-repeat: no-repeat !important;
        background-size: cover !important;
        background-image: url('../../img/BackGround.png');
    }
     body {
    font-family: "Helvetica Neue",Helvetica,Arial,sans-serif;
    font-size: 25px;
    line-height: 1.42857143;
    color: #333;
    background-color: #fff;
}
      .form-control{
            font-size: 20px;
        }
        .btn {
            font-size: 25px;
        }
         .h4, h4 {
        font-size: 35px;
        }

    h3 {
        color: midnightblue !important;
    }
</style>

<div class="container-fluid">
    <br /> <br />
    <div class="row">
        <br /> <br />
               <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                   <br /> <br />
                     <h3 class="title text-center">Edit Ticket</h3>


                   @using (Html.BeginForm())
                   {
                       @Html.AntiForgeryToken()

                       <div class="form-horizontal">

                           <hr />
                           @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                           @Html.HiddenFor(model => model.Id)
                           @Html.HiddenFor(model => model.ProjectId)
                           @Html.HiddenFor(model => model.Created)
                           @Html.HiddenFor(model => model.Updated)
                           @Html.HiddenFor(model => model.AssignedToUserId)


                           @*<div class="form-group">
                    @Html.LabelFor(model => model.ProjectId, "ProjectId", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("ProjectId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ProjectId, "", new { @class = "text-danger" })
                    </div>
                </div>*@

                           <div class="form-group">
                               @Html.LabelFor(model => model.TicketTypeId, "TicketTypeId", htmlAttributes: new { @class = "control-label col-md-2" })
                               <div class="col-md-4">
                                   @Html.DropDownList("TicketTypeId", null, htmlAttributes: new { @class = "form-control" })
                                   @Html.ValidationMessageFor(model => model.TicketTypeId, "", new { @class = "text-danger" })
                               </div>
                           </div>

                           <div class="form-group">
                               @Html.LabelFor(model => model.TicketStatusId, "TicketStatusId", htmlAttributes: new { @class = "control-label col-md-2" })
                               <div class="col-md-4">
                                   @Html.DropDownList("TicketStatusId", null, htmlAttributes: new { @class = "form-control" })
                                   @Html.ValidationMessageFor(model => model.TicketStatusId, "", new { @class = "text-danger" })
                               </div>
                           </div>

                           <div class="form-group">
                               @Html.LabelFor(model => model.TicketPriorityId, "TicketPriorityId", htmlAttributes: new { @class = "control-label col-md-2" })
                               <div class="col-md-4">
                                   @Html.DropDownList("TicketPriorityId", null, htmlAttributes: new { @class = "form-control" })
                                   @Html.ValidationMessageFor(model => model.TicketPriorityId, "", new { @class = "text-danger" })
                               </div>
                           </div>
                           @if (User.IsInRole("Admin"))
                {
                    <div class="form-group">
                        @Html.LabelFor(model => model.OwnerUserId, "OwnerUserId", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @Html.DropDownList("OwnerUserId", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.OwnerUserId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                }
                           @*Only PM can assign tickets*@
                           @*@if (User.IsInRole("Project Manager"))
                {
                    <div class="form-group">
                        @Html.LabelFor(model => model.AssignedToUserId, "AssignedToUserId", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("AssignedToUserId", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.AssignedToUserId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                }*@
                           <div class="form-group">
                               @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                               <div class="col-md-4">
                                   @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                                   @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                               </div>
                           </div>
                           <div class="form-group">
                               @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                               <div class="col-md-4">
                                   @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                                   @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                               </div>
                           </div>

                           @*<div class="form-group">
                    @Html.LabelFor(model => model.Created, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Created, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Created, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Updated, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Updated, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Updated, "", new { @class = "text-danger" })
                    </div>
                </div>*@

                           <div class="form-group">
                               <div class="col-md-offset-2 col-md-10">
                                   <input type="submit" value="Save" class="btn btn-success" />
                               </div>
                           </div>
                       </div>
                   }

                   <div>
                       @Html.ActionLink("Back to List", "Index")
                   </div>

                   @section Scripts {
                       @Scripts.Render("~/bundles/jqueryval")
                   }
               </div>
    </div>
</div>